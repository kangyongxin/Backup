0322改版：
将gail dqfd的两个系统独立，目的是希望我们的soul和agent能分开进行进化，并且能够让soul部分保留自己之前的训练结果
所以单独写了一个类，并定义一个名字为soul的实体，二者需要交互的是memory
在运行soul之前从agent的memory中杜数据，
运行过程中保存自己的memory
在运行结束后把memory和agent共享

根本问题没有解决，就是tf中的网络参数怎么重新加载进来


0327改版
重新构造整体函数结构，希望能够进一步理解GAIL和DQFD的机制。

memory是一个公共的类，两个部分都要调用，所以一定要保证他能很友好地写入和读出。

DQFD是基础架构，gail只是其中一部分。也就是我们的记忆生成是要嵌入到DQFD中的。

0329 V3版
DQFD与GAIL 对比来看，GAIL达到最优值要慢一点，但是经过一段时间的循环都可以完成。GAIL的模型可以保存并复用，但是DQFD结合进来之后，就会让GAIL产生的数据水土不符，不知道为啥。
